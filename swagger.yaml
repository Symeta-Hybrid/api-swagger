openapi: 3.0.3
info:
  title: Mail-IT-Wize API
  description: |-
    Next to the Mail-IT-Wize web portal we also offer a RESTful API. This API provides an endpoint for printing and sending documents. Enveloping the letter and return mail processing is also provided.

    The process contains two components: receiving documents including metadata (document intake request) and consulting the previously processed data (resource request).
  termsOfService: https://portal.mailitwize.com/terms-and-conditions
  contact:
    email: support@mailitwize.com
  version: 1.4.0
servers:
  - url: https://api-test.mailitwize.com/api/v1
  - url: https://api.mailitwize.com/api/v1
tags:
  - name: intake
    description: Submit new intakes, get estimates or retrieve intake information
paths:
  /intake:
    post:
      tags:
        - intake
      summary: Create a new intake
      description: Create a new intake via JSON request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Intake'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intake'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Intake'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - bearerAuth:
            - write:pets
            - read:pets
components:
  schemas:
    Intake:
      type: object
      properties:
        document:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: 'maindocument.pdf'
              mime-type:
                type: string
                example: 'application/pdf'
              contents:
                type: string
                format: byte
                example: JVBERi0xLjUKJcOkw7zDtsOfCjIgMCBvYmoKPDwvTGVuZ3RoIDMgMCBSL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nDPQM1Qo5ypUMFAw0DMwslAwtTTVMzI3VbAwMdSzMDNUKErlCtdSyOMKVAAAtxIIrgplbmRzdHJlYW0KZW5kb2JqCgozIDAgb2JqCjUwCmVuZG9iagoKNSAwIG9iago8PAo+PgplbmRvYmoKCjYgMCBvYmoKPDwvRm9udCA1IDAgUgovUHJvY1NldFsvUERGL1RleHRdCj4+CmVuZG9iagoKMSAwIG9iago8PC9UeXBlL1BhZ2UvUGFyZW50IDQgMCBSL1Jlc291cmNlcyA2IDAgUi9NZWRpYUJveFswIDAgNTk1LjMwMzkzNzAwNzg3NCA4NDEuODg5NzYzNzc5NTI4XS9Hcm91cDw8L1MvVHJhbnNwYXJlbmN5L0NTL0RldmljZVJHQi9JIHRydWU+Pi9Db250ZW50cyAyIDAgUj4+CmVuZG9iagoKNCAwIG9iago8PC9UeXBlL1BhZ2VzCi9SZXNvdXJjZXMgNiAwIFIKL01lZGlhQm94WyAwIDAgNTk1IDg0MSBdCi9LaWRzWyAxIDAgUiBdCi9Db3VudCAxPj4KZW5kb2JqCgo3IDAgb2JqCjw8L1R5cGUvQ2F0YWxvZy9QYWdlcyA0IDAgUgovT3BlbkFjdGlvblsxIDAgUiAvWFlaIG51bGwgbnVsbCAwXQovTGFuZyhubC1CRSkKPj4KZW5kb2JqCgo4IDAgb2JqCjw8L0NyZWF0b3I8RkVGRjAwNTcwMDcyMDA2OTAwNzQwMDY1MDA3Mj4KL1Byb2R1Y2VyPEZFRkYwMDRDMDA2OTAwNjIwMDcyMDA2NTAwNEYwMDY2MDA2NjAwNjkwMDYzMDA2NTAwMjAwMDM2MDAyRTAwMzM+Ci9DcmVhdGlvbkRhdGUoRDoyMDE5MTEyNTE3MjA0MSswMScwMCcpPj4KZW5kb2JqCgp4cmVmCjAgOQowMDAwMDAwMDAwIDY1NTM1IGYgCjAwMDAwMDAyMzQgMDAwMDAgbiAKMDAwMDAwMDAxOSAwMDAwMCBuIAowMDAwMDAwMTQwIDAwMDAwIG4gCjAwMDAwMDA0MDIgMDAwMDAgbiAKMDAwMDAwMDE1OSAwMDAwMCBuIAowMDAwMDAwMTgxIDAwMDAwIG4gCjAwMDAwMDA1MDAgMDAwMDAgbiAKMDAwMDAwMDU5NiAwMDAwMCBuIAp0cmFpbGVyCjw8L1NpemUgOS9Sb290IDcgMCBSCi9JbmZvIDggMCBSCi9JRCBbIDw0QkUwOTAxQzI4MkQ2MzA5RkZCM0MxQTUyQTExQzQ0RD4KPDRCRTA5MDFDMjgyRDYzMDlGRkIzQzFBNTJBMTFDNDREPiBdCi9Eb2NDaGVja3N1bSAvNDlFRTFCRUI2QTBDODU3QkIxNTIxN0U2RTRCREI0MUQKPj4Kc3RhcnR4cmVmCjc3MAolJUVPRgo=
              multiplex:
                description: Print method - 1 for recto verso, 0 for recto
                type: integer
                enum:
                  - 0
                  - 1
                default: 1
        address:
          type: array
          items:
            type: object
            properties:
              street:
                type: string
                example: 'Interleuvenlaan 50'
              zip:
                type: string
                example: '3001'
              municipality:
                type: string
                example: 'Leuven'
              company:
                type: string
                example: 'Symeta Hybrid nv'
            oneOf:
                - type: object
                  properties:
                    firstname:
                      type: string
                      example: 'John'
                    lastname:
                      type: string
                      example: 'Doe'
                  required:
                    - firstname
                    - lastname
                  additionalProperties: false
                - type: object
                  properties:
                    fullname:
                      type: string
                      example: 'John Doe'
                  required:
                    - fullname
                  additionalProperties: false
        postalService:
          type: array
          items:
            type: object
            properties:
              registered:
                type: integer
                enum: [0, 1]
                default: 0
              prior:
                type: integer
                enum: [0, 1]
                default: 0
              nonPrior:
                type: integer
                enum: [0, 1]
                default: 1
        correlation:
          type: array
          items:
            type: object
            properties:
              costId:
                type: string
                example: 'test'
              lang:
                type: string
                enum: ['nl', 'fr', 'en', 'de']
              returnAddress:
                type: string
                example: 'Interleuvenlaan 50, 3001 Leuven'
                description: Will be printed on the envelope as return address in case the letter is undeliverable
        hook:
          type: array
          items:
            type: object
            properties:
              uri:
                type: string
                format: url
                example: 'https://example.com/hooks/mailitwize'
              method:
                type: string
                enum: ['GET', 'POST']
                default: 'POST'
  requestBodies:
    Intake:
      description: Intake that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Intake'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
